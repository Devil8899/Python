getcwd()>>>获取当前工作目录，即当前python脚本工作的目录路径
chdir("dirname")>>>改变当前工作目录 注：\表示一个转义字符，所以在盘符后要加两个\，也可以在路径名前加一个r，二者功能是相同的
curdir>>>返回当前目录
pardir>>>获取当前目录的父目录字符串名
makedirs('dirname1/dirname2') >>>可生成多层递归目录
removedirs('dirname1')>>>若目录为空，则删除，并递归到上一级目录，如若也为空，则删除，依此类推
mkdir('dirname')>>>生成单级目录；相当于shell中mkdir dirname
rmdir('dirname')>>>删除单级空目录，若目录不为空则无法删除，报错；相当于shell中rmdir dirname
listdir('dirname')>>>列出指定目录下的所有文件和子目录，包括隐藏文件，并以列表方式打印
remove()>>>删除一个文件
rename("oldname","newname")>>>重命名文件/目录
stat('path/filename')>>>获取文件/目录信息
sep>>>输出操作系统特定的路径分隔符，win下为"\\",Linux下为"/"
linesep>>>输出当前平台使用的行终止符，win下为"\r\n",Linux下为"\n"
pathsep>>>输出用于分割文件路径的字符串
name>>>输出字符串指示当前使用平台。win->'nt'; Linux->'posix'
system("bash command")>>>运行shell命令，直接显示
environ>>>获取系统环境变量
path.abspath(path)>>>返回path规范化的绝对路径
path.split(path)>>>将path分割成目录和文件名二元组返回
path.dirname(path)>>>返回path的目录。其实就是os.path.split(path)的第一个元素
path.basename(path)>>>返回path最后的文件名。如何path以／或\结尾，那么就会返回空值。即os.path.split(path)的第二个元素
path.exists(path)>>>如果path存在，返回True；如果path不存在，返回False
path.isabs(path)>>>如果path是绝对路径，返回True
path.isfile(path)>>>如果path是一个存在的文件，返回True。否则返回False
path.isdir(path)>>>如果path是一个存在的目录，则返回True。否则返回False
path.join(path1[, path2[, ...]])>>>将多个路径组合后返回，第一个绝对路径之前的参数将被忽略
path.getatime(path)>>>返回path所指向的文件或者目录的最后存取时间
path.getmtime(path)>>>返回path所指向的文件或者目录的最后修改时间